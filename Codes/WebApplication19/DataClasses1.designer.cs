#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication19
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ff")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcity(city instance);
    partial void Updatecity(city instance);
    partial void Deletecity(city instance);
    partial void Insertcoach(coach instance);
    partial void Updatecoach(coach instance);
    partial void Deletecoach(coach instance);
    partial void Insertteam_player(team_player instance);
    partial void Updateteam_player(team_player instance);
    partial void Deleteteam_player(team_player instance);
    partial void Insertcountry(country instance);
    partial void Updatecountry(country instance);
    partial void Deletecountry(country instance);
    partial void Insertdetail_goal(detail_goal instance);
    partial void Updatedetail_goal(detail_goal instance);
    partial void Deletedetail_goal(detail_goal instance);
    partial void Insertdetail_match(detail_match instance);
    partial void Updatedetail_match(detail_match instance);
    partial void Deletedetail_match(detail_match instance);
    partial void Insertdetail_warning(detail_warning instance);
    partial void Updatedetail_warning(detail_warning instance);
    partial void Deletedetail_warning(detail_warning instance);
    partial void Insertmatch(match instance);
    partial void Updatematch(match instance);
    partial void Deletematch(match instance);
    partial void Insertpersonnel(personnel instance);
    partial void Updatepersonnel(personnel instance);
    partial void Deletepersonnel(personnel instance);
    partial void Insertplayer(player instance);
    partial void Updateplayer(player instance);
    partial void Deleteplayer(player instance);
    partial void Insertreferee(referee instance);
    partial void Updatereferee(referee instance);
    partial void Deletereferee(referee instance);
    partial void Insertseason(season instance);
    partial void Updateseason(season instance);
    partial void Deleteseason(season instance);
    partial void InsertStadium(Stadium instance);
    partial void UpdateStadium(Stadium instance);
    partial void DeleteStadium(Stadium instance);
    partial void Insertteam(team instance);
    partial void Updateteam(team instance);
    partial void Deleteteam(team instance);
    partial void Insertteam_coach(team_coach instance);
    partial void Updateteam_coach(team_coach instance);
    partial void Deleteteam_coach(team_coach instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ffConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<city> cities
		{
			get
			{
				return this.GetTable<city>();
			}
		}
		
		public System.Data.Linq.Table<coach> coaches
		{
			get
			{
				return this.GetTable<coach>();
			}
		}
		
		public System.Data.Linq.Table<team_player> team_players
		{
			get
			{
				return this.GetTable<team_player>();
			}
		}
		
		public System.Data.Linq.Table<country> countries
		{
			get
			{
				return this.GetTable<country>();
			}
		}
		
		public System.Data.Linq.Table<detail_goal> detail_goals
		{
			get
			{
				return this.GetTable<detail_goal>();
			}
		}
		
		public System.Data.Linq.Table<detail_match> detail_matches
		{
			get
			{
				return this.GetTable<detail_match>();
			}
		}
		
		public System.Data.Linq.Table<detail_warning> detail_warnings
		{
			get
			{
				return this.GetTable<detail_warning>();
			}
		}
		
		public System.Data.Linq.Table<match> matches
		{
			get
			{
				return this.GetTable<match>();
			}
		}
		
		public System.Data.Linq.Table<personnel> personnels
		{
			get
			{
				return this.GetTable<personnel>();
			}
		}
		
		public System.Data.Linq.Table<player> players
		{
			get
			{
				return this.GetTable<player>();
			}
		}
		
		public System.Data.Linq.Table<referee> referees
		{
			get
			{
				return this.GetTable<referee>();
			}
		}
		
		public System.Data.Linq.Table<season> seasons
		{
			get
			{
				return this.GetTable<season>();
			}
		}
		
		public System.Data.Linq.Table<Stadium> Stadiums
		{
			get
			{
				return this.GetTable<Stadium>();
			}
		}
		
		public System.Data.Linq.Table<team> teams
		{
			get
			{
				return this.GetTable<team>();
			}
		}
		
		public System.Data.Linq.Table<team_coach> team_coaches
		{
			get
			{
				return this.GetTable<team_coach>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.city")]
	public partial class city : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _country_id;
		
		private decimal _city_id;
		
		private string _city_name;
		
		private EntitySet<coach> _coaches;
		
		private EntitySet<personnel> _personnels;
		
		private EntitySet<player> _players;
		
		private EntitySet<referee> _referees;
		
		private EntitySet<Stadium> _Stadiums;
		
		private EntitySet<team> _teams;
		
		private EntityRef<country> _country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncountry_idChanging(System.Nullable<decimal> value);
    partial void Oncountry_idChanged();
    partial void Oncity_idChanging(decimal value);
    partial void Oncity_idChanged();
    partial void Oncity_nameChanging(string value);
    partial void Oncity_nameChanged();
    #endregion
		
		public city()
		{
			this._coaches = new EntitySet<coach>(new Action<coach>(this.attach_coaches), new Action<coach>(this.detach_coaches));
			this._personnels = new EntitySet<personnel>(new Action<personnel>(this.attach_personnels), new Action<personnel>(this.detach_personnels));
			this._players = new EntitySet<player>(new Action<player>(this.attach_players), new Action<player>(this.detach_players));
			this._referees = new EntitySet<referee>(new Action<referee>(this.attach_referees), new Action<referee>(this.detach_referees));
			this._Stadiums = new EntitySet<Stadium>(new Action<Stadium>(this.attach_Stadiums), new Action<Stadium>(this.detach_Stadiums));
			this._teams = new EntitySet<team>(new Action<team>(this.attach_teams), new Action<team>(this.detach_teams));
			this._country = default(EntityRef<country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> country_id
		{
			get
			{
				return this._country_id;
			}
			set
			{
				if ((this._country_id != value))
				{
					if (this._country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncountry_idChanging(value);
					this.SendPropertyChanging();
					this._country_id = value;
					this.SendPropertyChanged("country_id");
					this.Oncountry_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_name", DbType="VarChar(40)")]
		public string city_name
		{
			get
			{
				return this._city_name;
			}
			set
			{
				if ((this._city_name != value))
				{
					this.Oncity_nameChanging(value);
					this.SendPropertyChanging();
					this._city_name = value;
					this.SendPropertyChanged("city_name");
					this.Oncity_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_coach", Storage="_coaches", ThisKey="city_id", OtherKey="city_id")]
		public EntitySet<coach> coaches
		{
			get
			{
				return this._coaches;
			}
			set
			{
				this._coaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_personnel", Storage="_personnels", ThisKey="city_id", OtherKey="city_id")]
		public EntitySet<personnel> personnels
		{
			get
			{
				return this._personnels;
			}
			set
			{
				this._personnels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_player", Storage="_players", ThisKey="city_id", OtherKey="city_id")]
		public EntitySet<player> players
		{
			get
			{
				return this._players;
			}
			set
			{
				this._players.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_referee", Storage="_referees", ThisKey="city_id", OtherKey="city_id")]
		public EntitySet<referee> referees
		{
			get
			{
				return this._referees;
			}
			set
			{
				this._referees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_Stadium", Storage="_Stadiums", ThisKey="city_id", OtherKey="city_id")]
		public EntitySet<Stadium> Stadiums
		{
			get
			{
				return this._Stadiums;
			}
			set
			{
				this._Stadiums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_team", Storage="_teams", ThisKey="city_id", OtherKey="city_id")]
		public EntitySet<team> teams
		{
			get
			{
				return this._teams;
			}
			set
			{
				this._teams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="country_city", Storage="_country", ThisKey="country_id", OtherKey="country_id", IsForeignKey=true)]
		public country country
		{
			get
			{
				return this._country.Entity;
			}
			set
			{
				country previousValue = this._country.Entity;
				if (((previousValue != value) 
							|| (this._country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._country.Entity = null;
						previousValue.cities.Remove(this);
					}
					this._country.Entity = value;
					if ((value != null))
					{
						value.cities.Add(this);
						this._country_id = value.country_id;
					}
					else
					{
						this._country_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_coaches(coach entity)
		{
			this.SendPropertyChanging();
			entity.city = this;
		}
		
		private void detach_coaches(coach entity)
		{
			this.SendPropertyChanging();
			entity.city = null;
		}
		
		private void attach_personnels(personnel entity)
		{
			this.SendPropertyChanging();
			entity.city = this;
		}
		
		private void detach_personnels(personnel entity)
		{
			this.SendPropertyChanging();
			entity.city = null;
		}
		
		private void attach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.city = this;
		}
		
		private void detach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.city = null;
		}
		
		private void attach_referees(referee entity)
		{
			this.SendPropertyChanging();
			entity.city = this;
		}
		
		private void detach_referees(referee entity)
		{
			this.SendPropertyChanging();
			entity.city = null;
		}
		
		private void attach_Stadiums(Stadium entity)
		{
			this.SendPropertyChanging();
			entity.city = this;
		}
		
		private void detach_Stadiums(Stadium entity)
		{
			this.SendPropertyChanging();
			entity.city = null;
		}
		
		private void attach_teams(team entity)
		{
			this.SendPropertyChanging();
			entity.city = this;
		}
		
		private void detach_teams(team entity)
		{
			this.SendPropertyChanging();
			entity.city = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.coach")]
	public partial class coach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _coach_id;
		
		private System.Nullable<decimal> _city_id;
		
		private string _coach_name;
		
		private string _coach_lastname;
		
		private System.Nullable<int> _coach_level;
		
		private System.Nullable<int> _BirthYear;
		
		private System.Nullable<System.DateTime> _date_start_Coaching;
		
		private string _email;
		
		private EntitySet<team_coach> _team_coaches;
		
		private EntityRef<city> _city;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncoach_idChanging(decimal value);
    partial void Oncoach_idChanged();
    partial void Oncity_idChanging(System.Nullable<decimal> value);
    partial void Oncity_idChanged();
    partial void Oncoach_nameChanging(string value);
    partial void Oncoach_nameChanged();
    partial void Oncoach_lastnameChanging(string value);
    partial void Oncoach_lastnameChanged();
    partial void Oncoach_levelChanging(System.Nullable<int> value);
    partial void Oncoach_levelChanged();
    partial void OnBirthYearChanging(System.Nullable<int> value);
    partial void OnBirthYearChanged();
    partial void Ondate_start_CoachingChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_start_CoachingChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public coach()
		{
			this._team_coaches = new EntitySet<team_coach>(new Action<team_coach>(this.attach_team_coaches), new Action<team_coach>(this.detach_team_coaches));
			this._city = default(EntityRef<city>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coach_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal coach_id
		{
			get
			{
				return this._coach_id;
			}
			set
			{
				if ((this._coach_id != value))
				{
					this.Oncoach_idChanging(value);
					this.SendPropertyChanging();
					this._coach_id = value;
					this.SendPropertyChanged("coach_id");
					this.Oncoach_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					if (this._city.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coach_name", DbType="VarChar(40)")]
		public string coach_name
		{
			get
			{
				return this._coach_name;
			}
			set
			{
				if ((this._coach_name != value))
				{
					this.Oncoach_nameChanging(value);
					this.SendPropertyChanging();
					this._coach_name = value;
					this.SendPropertyChanged("coach_name");
					this.Oncoach_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coach_lastname", DbType="VarChar(40)")]
		public string coach_lastname
		{
			get
			{
				return this._coach_lastname;
			}
			set
			{
				if ((this._coach_lastname != value))
				{
					this.Oncoach_lastnameChanging(value);
					this.SendPropertyChanging();
					this._coach_lastname = value;
					this.SendPropertyChanged("coach_lastname");
					this.Oncoach_lastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coach_level", DbType="Int")]
		public System.Nullable<int> coach_level
		{
			get
			{
				return this._coach_level;
			}
			set
			{
				if ((this._coach_level != value))
				{
					this.Oncoach_levelChanging(value);
					this.SendPropertyChanging();
					this._coach_level = value;
					this.SendPropertyChanged("coach_level");
					this.Oncoach_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthYear", DbType="Int")]
		public System.Nullable<int> BirthYear
		{
			get
			{
				return this._BirthYear;
			}
			set
			{
				if ((this._BirthYear != value))
				{
					this.OnBirthYearChanging(value);
					this.SendPropertyChanging();
					this._BirthYear = value;
					this.SendPropertyChanged("BirthYear");
					this.OnBirthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_start_Coaching", DbType="Date")]
		public System.Nullable<System.DateTime> date_start_Coaching
		{
			get
			{
				return this._date_start_Coaching;
			}
			set
			{
				if ((this._date_start_Coaching != value))
				{
					this.Ondate_start_CoachingChanging(value);
					this.SendPropertyChanging();
					this._date_start_Coaching = value;
					this.SendPropertyChanged("date_start_Coaching");
					this.Ondate_start_CoachingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="coach_team_coach", Storage="_team_coaches", ThisKey="coach_id", OtherKey="id_coach")]
		public EntitySet<team_coach> team_coaches
		{
			get
			{
				return this._team_coaches;
			}
			set
			{
				this._team_coaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_coach", Storage="_city", ThisKey="city_id", OtherKey="city_id", IsForeignKey=true)]
		public city city
		{
			get
			{
				return this._city.Entity;
			}
			set
			{
				city previousValue = this._city.Entity;
				if (((previousValue != value) 
							|| (this._city.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._city.Entity = null;
						previousValue.coaches.Remove(this);
					}
					this._city.Entity = value;
					if ((value != null))
					{
						value.coaches.Add(this);
						this._city_id = value.city_id;
					}
					else
					{
						this._city_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("city");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_team_coaches(team_coach entity)
		{
			this.SendPropertyChanging();
			entity.coach = this;
		}
		
		private void detach_team_coaches(team_coach entity)
		{
			this.SendPropertyChanging();
			entity.coach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.team_player")]
	public partial class team_player : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _id_team;
		
		private decimal _id_player;
		
		private decimal _id_season;
		
		private System.Nullable<decimal> _amount_;
		
		private EntityRef<player> _player;
		
		private EntityRef<season> _season;
		
		private EntityRef<team> _team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_teamChanging(decimal value);
    partial void Onid_teamChanged();
    partial void Onid_playerChanging(decimal value);
    partial void Onid_playerChanged();
    partial void Onid_seasonChanging(decimal value);
    partial void Onid_seasonChanged();
    partial void Onamount_Changing(System.Nullable<decimal> value);
    partial void Onamount_Changed();
    #endregion
		
		public team_player()
		{
			this._player = default(EntityRef<player>);
			this._season = default(EntityRef<season>);
			this._team = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_team", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal id_team
		{
			get
			{
				return this._id_team;
			}
			set
			{
				if ((this._id_team != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_teamChanging(value);
					this.SendPropertyChanging();
					this._id_team = value;
					this.SendPropertyChanged("id_team");
					this.Onid_teamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_player", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal id_player
		{
			get
			{
				return this._id_player;
			}
			set
			{
				if ((this._id_player != value))
				{
					if (this._player.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_playerChanging(value);
					this.SendPropertyChanging();
					this._id_player = value;
					this.SendPropertyChanged("id_player");
					this.Onid_playerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_season", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal id_season
		{
			get
			{
				return this._id_season;
			}
			set
			{
				if ((this._id_season != value))
				{
					if (this._season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_seasonChanging(value);
					this.SendPropertyChanging();
					this._id_season = value;
					this.SendPropertyChanged("id_season");
					this.Onid_seasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount_", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> amount_
		{
			get
			{
				return this._amount_;
			}
			set
			{
				if ((this._amount_ != value))
				{
					this.Onamount_Changing(value);
					this.SendPropertyChanging();
					this._amount_ = value;
					this.SendPropertyChanged("amount_");
					this.Onamount_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_team_player", Storage="_player", ThisKey="id_player", OtherKey="player_id", IsForeignKey=true)]
		public player player
		{
			get
			{
				return this._player.Entity;
			}
			set
			{
				player previousValue = this._player.Entity;
				if (((previousValue != value) 
							|| (this._player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._player.Entity = null;
						previousValue.team_players.Remove(this);
					}
					this._player.Entity = value;
					if ((value != null))
					{
						value.team_players.Add(this);
						this._id_player = value.player_id;
					}
					else
					{
						this._id_player = default(decimal);
					}
					this.SendPropertyChanged("player");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="season_team_player", Storage="_season", ThisKey="id_season", OtherKey="season_id", IsForeignKey=true)]
		public season season
		{
			get
			{
				return this._season.Entity;
			}
			set
			{
				season previousValue = this._season.Entity;
				if (((previousValue != value) 
							|| (this._season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._season.Entity = null;
						previousValue.team_players.Remove(this);
					}
					this._season.Entity = value;
					if ((value != null))
					{
						value.team_players.Add(this);
						this._id_season = value.season_id;
					}
					else
					{
						this._id_season = default(decimal);
					}
					this.SendPropertyChanged("season");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_team_player", Storage="_team", ThisKey="id_team", OtherKey="team_id", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.team_players.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.team_players.Add(this);
						this._id_team = value.team_id;
					}
					else
					{
						this._id_team = default(decimal);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.country")]
	public partial class country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _country_id;
		
		private string _country_name;
		
		private EntitySet<city> _cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncountry_idChanging(decimal value);
    partial void Oncountry_idChanged();
    partial void Oncountry_nameChanging(string value);
    partial void Oncountry_nameChanged();
    #endregion
		
		public country()
		{
			this._cities = new EntitySet<city>(new Action<city>(this.attach_cities), new Action<city>(this.detach_cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal country_id
		{
			get
			{
				return this._country_id;
			}
			set
			{
				if ((this._country_id != value))
				{
					this.Oncountry_idChanging(value);
					this.SendPropertyChanging();
					this._country_id = value;
					this.SendPropertyChanged("country_id");
					this.Oncountry_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_name", DbType="VarChar(40)")]
		public string country_name
		{
			get
			{
				return this._country_name;
			}
			set
			{
				if ((this._country_name != value))
				{
					this.Oncountry_nameChanging(value);
					this.SendPropertyChanging();
					this._country_name = value;
					this.SendPropertyChanged("country_name");
					this.Oncountry_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="country_city", Storage="_cities", ThisKey="country_id", OtherKey="country_id")]
		public EntitySet<city> cities
		{
			get
			{
				return this._cities;
			}
			set
			{
				this._cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cities(city entity)
		{
			this.SendPropertyChanging();
			entity.country = this;
		}
		
		private void detach_cities(city entity)
		{
			this.SendPropertyChanging();
			entity.country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detail_goal")]
	public partial class detail_goal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _match_id;
		
		private int _goal_id;
		
		private System.Nullable<decimal> _player_id;
		
		private string _goal_time;
		
		private System.Nullable<char> _goal_type;
		
		private EntityRef<match> _match;
		
		private EntityRef<player> _player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmatch_idChanging(System.Nullable<decimal> value);
    partial void Onmatch_idChanged();
    partial void Ongoal_idChanging(int value);
    partial void Ongoal_idChanged();
    partial void Onplayer_idChanging(System.Nullable<decimal> value);
    partial void Onplayer_idChanged();
    partial void Ongoal_timeChanging(string value);
    partial void Ongoal_timeChanged();
    partial void Ongoal_typeChanging(System.Nullable<char> value);
    partial void Ongoal_typeChanged();
    #endregion
		
		public detail_goal()
		{
			this._match = default(EntityRef<match>);
			this._player = default(EntityRef<player>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_match_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> match_id
		{
			get
			{
				return this._match_id;
			}
			set
			{
				if ((this._match_id != value))
				{
					if (this._match.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmatch_idChanging(value);
					this.SendPropertyChanging();
					this._match_id = value;
					this.SendPropertyChanged("match_id");
					this.Onmatch_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goal_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int goal_id
		{
			get
			{
				return this._goal_id;
			}
			set
			{
				if ((this._goal_id != value))
				{
					this.Ongoal_idChanging(value);
					this.SendPropertyChanging();
					this._goal_id = value;
					this.SendPropertyChanged("goal_id");
					this.Ongoal_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> player_id
		{
			get
			{
				return this._player_id;
			}
			set
			{
				if ((this._player_id != value))
				{
					if (this._player.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplayer_idChanging(value);
					this.SendPropertyChanging();
					this._player_id = value;
					this.SendPropertyChanged("player_id");
					this.Onplayer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goal_time", DbType="VarChar(30)")]
		public string goal_time
		{
			get
			{
				return this._goal_time;
			}
			set
			{
				if ((this._goal_time != value))
				{
					this.Ongoal_timeChanging(value);
					this.SendPropertyChanging();
					this._goal_time = value;
					this.SendPropertyChanged("goal_time");
					this.Ongoal_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goal_type", DbType="Char(1)")]
		public System.Nullable<char> goal_type
		{
			get
			{
				return this._goal_type;
			}
			set
			{
				if ((this._goal_type != value))
				{
					this.Ongoal_typeChanging(value);
					this.SendPropertyChanging();
					this._goal_type = value;
					this.SendPropertyChanged("goal_type");
					this.Ongoal_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="match_detail_goal", Storage="_match", ThisKey="match_id", OtherKey="match_id", IsForeignKey=true)]
		public match match
		{
			get
			{
				return this._match.Entity;
			}
			set
			{
				match previousValue = this._match.Entity;
				if (((previousValue != value) 
							|| (this._match.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._match.Entity = null;
						previousValue.detail_goals.Remove(this);
					}
					this._match.Entity = value;
					if ((value != null))
					{
						value.detail_goals.Add(this);
						this._match_id = value.match_id;
					}
					else
					{
						this._match_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("match");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_detail_goal", Storage="_player", ThisKey="player_id", OtherKey="player_id", IsForeignKey=true)]
		public player player
		{
			get
			{
				return this._player.Entity;
			}
			set
			{
				player previousValue = this._player.Entity;
				if (((previousValue != value) 
							|| (this._player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._player.Entity = null;
						previousValue.detail_goals.Remove(this);
					}
					this._player.Entity = value;
					if ((value != null))
					{
						value.detail_goals.Add(this);
						this._player_id = value.player_id;
					}
					else
					{
						this._player_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("player");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detail_match")]
	public partial class detail_match : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _team_id_won;
		
		private System.Nullable<decimal> _result;
		
		private System.Nullable<decimal> _team_id_lost;
		
		private System.Nullable<int> _point_judgment;
		
		private decimal _match_id;
		
		private EntityRef<match> _match;
		
		private EntityRef<team> _team;
		
		private EntityRef<team> _team1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onteam_id_wonChanging(System.Nullable<decimal> value);
    partial void Onteam_id_wonChanged();
    partial void OnresultChanging(System.Nullable<decimal> value);
    partial void OnresultChanged();
    partial void Onteam_id_lostChanging(System.Nullable<decimal> value);
    partial void Onteam_id_lostChanged();
    partial void Onpoint_judgmentChanging(System.Nullable<int> value);
    partial void Onpoint_judgmentChanged();
    partial void Onmatch_idChanging(decimal value);
    partial void Onmatch_idChanged();
    #endregion
		
		public detail_match()
		{
			this._match = default(EntityRef<match>);
			this._team = default(EntityRef<team>);
			this._team1 = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_id_won", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> team_id_won
		{
			get
			{
				return this._team_id_won;
			}
			set
			{
				if ((this._team_id_won != value))
				{
					if (this._team1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteam_id_wonChanging(value);
					this.SendPropertyChanging();
					this._team_id_won = value;
					this.SendPropertyChanged("team_id_won");
					this.Onteam_id_wonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_id_lost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> team_id_lost
		{
			get
			{
				return this._team_id_lost;
			}
			set
			{
				if ((this._team_id_lost != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteam_id_lostChanging(value);
					this.SendPropertyChanging();
					this._team_id_lost = value;
					this.SendPropertyChanged("team_id_lost");
					this.Onteam_id_lostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point_judgment", DbType="Int")]
		public System.Nullable<int> point_judgment
		{
			get
			{
				return this._point_judgment;
			}
			set
			{
				if ((this._point_judgment != value))
				{
					this.Onpoint_judgmentChanging(value);
					this.SendPropertyChanging();
					this._point_judgment = value;
					this.SendPropertyChanged("point_judgment");
					this.Onpoint_judgmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_match_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal match_id
		{
			get
			{
				return this._match_id;
			}
			set
			{
				if ((this._match_id != value))
				{
					if (this._match.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmatch_idChanging(value);
					this.SendPropertyChanging();
					this._match_id = value;
					this.SendPropertyChanged("match_id");
					this.Onmatch_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="match_detail_match", Storage="_match", ThisKey="match_id", OtherKey="match_id", IsForeignKey=true)]
		public match match
		{
			get
			{
				return this._match.Entity;
			}
			set
			{
				match previousValue = this._match.Entity;
				if (((previousValue != value) 
							|| (this._match.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._match.Entity = null;
						previousValue.detail_match = null;
					}
					this._match.Entity = value;
					if ((value != null))
					{
						value.detail_match = this;
						this._match_id = value.match_id;
					}
					else
					{
						this._match_id = default(decimal);
					}
					this.SendPropertyChanged("match");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_detail_match", Storage="_team", ThisKey="team_id_lost", OtherKey="team_id", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.detail_matches.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.detail_matches.Add(this);
						this._team_id_lost = value.team_id;
					}
					else
					{
						this._team_id_lost = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_detail_match1", Storage="_team1", ThisKey="team_id_won", OtherKey="team_id", IsForeignKey=true)]
		public team team1
		{
			get
			{
				return this._team1.Entity;
			}
			set
			{
				team previousValue = this._team1.Entity;
				if (((previousValue != value) 
							|| (this._team1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team1.Entity = null;
						previousValue.detail_matches1.Remove(this);
					}
					this._team1.Entity = value;
					if ((value != null))
					{
						value.detail_matches1.Add(this);
						this._team_id_won = value.team_id;
					}
					else
					{
						this._team_id_won = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("team1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detail_warning")]
	public partial class detail_warning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _match_id;
		
		private int _warning_id;
		
		private System.Nullable<decimal> _player_id;
		
		private string _warning_type;
		
		private string _warning_time;
		
		private EntityRef<match> _match;
		
		private EntityRef<player> _player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmatch_idChanging(System.Nullable<decimal> value);
    partial void Onmatch_idChanged();
    partial void Onwarning_idChanging(int value);
    partial void Onwarning_idChanged();
    partial void Onplayer_idChanging(System.Nullable<decimal> value);
    partial void Onplayer_idChanged();
    partial void Onwarning_typeChanging(string value);
    partial void Onwarning_typeChanged();
    partial void Onwarning_timeChanging(string value);
    partial void Onwarning_timeChanged();
    #endregion
		
		public detail_warning()
		{
			this._match = default(EntityRef<match>);
			this._player = default(EntityRef<player>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_match_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> match_id
		{
			get
			{
				return this._match_id;
			}
			set
			{
				if ((this._match_id != value))
				{
					if (this._match.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmatch_idChanging(value);
					this.SendPropertyChanging();
					this._match_id = value;
					this.SendPropertyChanged("match_id");
					this.Onmatch_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warning_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int warning_id
		{
			get
			{
				return this._warning_id;
			}
			set
			{
				if ((this._warning_id != value))
				{
					this.Onwarning_idChanging(value);
					this.SendPropertyChanging();
					this._warning_id = value;
					this.SendPropertyChanged("warning_id");
					this.Onwarning_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> player_id
		{
			get
			{
				return this._player_id;
			}
			set
			{
				if ((this._player_id != value))
				{
					if (this._player.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplayer_idChanging(value);
					this.SendPropertyChanging();
					this._player_id = value;
					this.SendPropertyChanged("player_id");
					this.Onplayer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warning_type", DbType="VarChar(30)")]
		public string warning_type
		{
			get
			{
				return this._warning_type;
			}
			set
			{
				if ((this._warning_type != value))
				{
					this.Onwarning_typeChanging(value);
					this.SendPropertyChanging();
					this._warning_type = value;
					this.SendPropertyChanged("warning_type");
					this.Onwarning_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warning_time", DbType="VarChar(30)")]
		public string warning_time
		{
			get
			{
				return this._warning_time;
			}
			set
			{
				if ((this._warning_time != value))
				{
					this.Onwarning_timeChanging(value);
					this.SendPropertyChanging();
					this._warning_time = value;
					this.SendPropertyChanged("warning_time");
					this.Onwarning_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="match_detail_warning", Storage="_match", ThisKey="match_id", OtherKey="match_id", IsForeignKey=true)]
		public match match
		{
			get
			{
				return this._match.Entity;
			}
			set
			{
				match previousValue = this._match.Entity;
				if (((previousValue != value) 
							|| (this._match.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._match.Entity = null;
						previousValue.detail_warnings.Remove(this);
					}
					this._match.Entity = value;
					if ((value != null))
					{
						value.detail_warnings.Add(this);
						this._match_id = value.match_id;
					}
					else
					{
						this._match_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("match");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_detail_warning", Storage="_player", ThisKey="player_id", OtherKey="player_id", IsForeignKey=true)]
		public player player
		{
			get
			{
				return this._player.Entity;
			}
			set
			{
				player previousValue = this._player.Entity;
				if (((previousValue != value) 
							|| (this._player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._player.Entity = null;
						previousValue.detail_warnings.Remove(this);
					}
					this._player.Entity = value;
					if ((value != null))
					{
						value.detail_warnings.Add(this);
						this._player_id = value.player_id;
					}
					else
					{
						this._player_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("player");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.match")]
	public partial class match : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _match_id;
		
		private System.Nullable<char> _stage;
		
		private System.Nullable<decimal> _team1_id;
		
		private System.Nullable<decimal> _team2_id;
		
		private System.Nullable<decimal> _stadium_id;
		
		private System.Nullable<System.DateTime> _match_date;
		
		private System.Nullable<decimal> _season_id;
		
		private System.Nullable<decimal> _id_referee;
		
		private System.Nullable<decimal> _id_assist_referee1;
		
		private System.Nullable<decimal> _id_assist_referee2;
		
		private EntitySet<detail_goal> _detail_goals;
		
		private EntityRef<detail_match> _detail_match;
		
		private EntitySet<detail_warning> _detail_warnings;
		
		private EntityRef<referee> _referee;
		
		private EntityRef<referee> _referee1;
		
		private EntityRef<referee> _referee2;
		
		private EntityRef<season> _season;
		
		private EntityRef<Stadium> _Stadium;
		
		private EntityRef<team> _team;
		
		private EntityRef<team> _team1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmatch_idChanging(decimal value);
    partial void Onmatch_idChanged();
    partial void OnstageChanging(System.Nullable<char> value);
    partial void OnstageChanged();
    partial void Onteam1_idChanging(System.Nullable<decimal> value);
    partial void Onteam1_idChanged();
    partial void Onteam2_idChanging(System.Nullable<decimal> value);
    partial void Onteam2_idChanged();
    partial void Onstadium_idChanging(System.Nullable<decimal> value);
    partial void Onstadium_idChanged();
    partial void Onmatch_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmatch_dateChanged();
    partial void Onseason_idChanging(System.Nullable<decimal> value);
    partial void Onseason_idChanged();
    partial void Onid_refereeChanging(System.Nullable<decimal> value);
    partial void Onid_refereeChanged();
    partial void Onid_assist_referee1Changing(System.Nullable<decimal> value);
    partial void Onid_assist_referee1Changed();
    partial void Onid_assist_referee2Changing(System.Nullable<decimal> value);
    partial void Onid_assist_referee2Changed();
    #endregion
		
		public match()
		{
			this._detail_goals = new EntitySet<detail_goal>(new Action<detail_goal>(this.attach_detail_goals), new Action<detail_goal>(this.detach_detail_goals));
			this._detail_match = default(EntityRef<detail_match>);
			this._detail_warnings = new EntitySet<detail_warning>(new Action<detail_warning>(this.attach_detail_warnings), new Action<detail_warning>(this.detach_detail_warnings));
			this._referee = default(EntityRef<referee>);
			this._referee1 = default(EntityRef<referee>);
			this._referee2 = default(EntityRef<referee>);
			this._season = default(EntityRef<season>);
			this._Stadium = default(EntityRef<Stadium>);
			this._team = default(EntityRef<team>);
			this._team1 = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_match_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal match_id
		{
			get
			{
				return this._match_id;
			}
			set
			{
				if ((this._match_id != value))
				{
					this.Onmatch_idChanging(value);
					this.SendPropertyChanging();
					this._match_id = value;
					this.SendPropertyChanged("match_id");
					this.Onmatch_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stage", DbType="Char(1)")]
		public System.Nullable<char> stage
		{
			get
			{
				return this._stage;
			}
			set
			{
				if ((this._stage != value))
				{
					this.OnstageChanging(value);
					this.SendPropertyChanging();
					this._stage = value;
					this.SendPropertyChanged("stage");
					this.OnstageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team1_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> team1_id
		{
			get
			{
				return this._team1_id;
			}
			set
			{
				if ((this._team1_id != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteam1_idChanging(value);
					this.SendPropertyChanging();
					this._team1_id = value;
					this.SendPropertyChanged("team1_id");
					this.Onteam1_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team2_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> team2_id
		{
			get
			{
				return this._team2_id;
			}
			set
			{
				if ((this._team2_id != value))
				{
					if (this._team1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteam2_idChanging(value);
					this.SendPropertyChanging();
					this._team2_id = value;
					this.SendPropertyChanged("team2_id");
					this.Onteam2_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stadium_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> stadium_id
		{
			get
			{
				return this._stadium_id;
			}
			set
			{
				if ((this._stadium_id != value))
				{
					if (this._Stadium.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstadium_idChanging(value);
					this.SendPropertyChanging();
					this._stadium_id = value;
					this.SendPropertyChanged("stadium_id");
					this.Onstadium_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_match_date", DbType="Date")]
		public System.Nullable<System.DateTime> match_date
		{
			get
			{
				return this._match_date;
			}
			set
			{
				if ((this._match_date != value))
				{
					this.Onmatch_dateChanging(value);
					this.SendPropertyChanging();
					this._match_date = value;
					this.SendPropertyChanged("match_date");
					this.Onmatch_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_season_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> season_id
		{
			get
			{
				return this._season_id;
			}
			set
			{
				if ((this._season_id != value))
				{
					if (this._season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseason_idChanging(value);
					this.SendPropertyChanging();
					this._season_id = value;
					this.SendPropertyChanged("season_id");
					this.Onseason_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_referee", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> id_referee
		{
			get
			{
				return this._id_referee;
			}
			set
			{
				if ((this._id_referee != value))
				{
					if (this._referee2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_refereeChanging(value);
					this.SendPropertyChanging();
					this._id_referee = value;
					this.SendPropertyChanged("id_referee");
					this.Onid_refereeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_assist_referee1", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> id_assist_referee1
		{
			get
			{
				return this._id_assist_referee1;
			}
			set
			{
				if ((this._id_assist_referee1 != value))
				{
					if (this._referee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_assist_referee1Changing(value);
					this.SendPropertyChanging();
					this._id_assist_referee1 = value;
					this.SendPropertyChanged("id_assist_referee1");
					this.Onid_assist_referee1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_assist_referee2", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> id_assist_referee2
		{
			get
			{
				return this._id_assist_referee2;
			}
			set
			{
				if ((this._id_assist_referee2 != value))
				{
					if (this._referee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_assist_referee2Changing(value);
					this.SendPropertyChanging();
					this._id_assist_referee2 = value;
					this.SendPropertyChanged("id_assist_referee2");
					this.Onid_assist_referee2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="match_detail_goal", Storage="_detail_goals", ThisKey="match_id", OtherKey="match_id")]
		public EntitySet<detail_goal> detail_goals
		{
			get
			{
				return this._detail_goals;
			}
			set
			{
				this._detail_goals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="match_detail_match", Storage="_detail_match", ThisKey="match_id", OtherKey="match_id", IsUnique=true, IsForeignKey=false)]
		public detail_match detail_match
		{
			get
			{
				return this._detail_match.Entity;
			}
			set
			{
				detail_match previousValue = this._detail_match.Entity;
				if (((previousValue != value) 
							|| (this._detail_match.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._detail_match.Entity = null;
						previousValue.match = null;
					}
					this._detail_match.Entity = value;
					if ((value != null))
					{
						value.match = this;
					}
					this.SendPropertyChanged("detail_match");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="match_detail_warning", Storage="_detail_warnings", ThisKey="match_id", OtherKey="match_id")]
		public EntitySet<detail_warning> detail_warnings
		{
			get
			{
				return this._detail_warnings;
			}
			set
			{
				this._detail_warnings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="referee_match", Storage="_referee", ThisKey="id_assist_referee1", OtherKey="referee_id", IsForeignKey=true)]
		public referee referee
		{
			get
			{
				return this._referee.Entity;
			}
			set
			{
				referee previousValue = this._referee.Entity;
				if (((previousValue != value) 
							|| (this._referee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._referee.Entity = null;
						previousValue.matches.Remove(this);
					}
					this._referee.Entity = value;
					if ((value != null))
					{
						value.matches.Add(this);
						this._id_assist_referee1 = value.referee_id;
					}
					else
					{
						this._id_assist_referee1 = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("referee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="referee_match1", Storage="_referee1", ThisKey="id_assist_referee2", OtherKey="referee_id", IsForeignKey=true)]
		public referee referee1
		{
			get
			{
				return this._referee1.Entity;
			}
			set
			{
				referee previousValue = this._referee1.Entity;
				if (((previousValue != value) 
							|| (this._referee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._referee1.Entity = null;
						previousValue.matches1.Remove(this);
					}
					this._referee1.Entity = value;
					if ((value != null))
					{
						value.matches1.Add(this);
						this._id_assist_referee2 = value.referee_id;
					}
					else
					{
						this._id_assist_referee2 = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("referee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="referee_match2", Storage="_referee2", ThisKey="id_referee", OtherKey="referee_id", IsForeignKey=true)]
		public referee referee2
		{
			get
			{
				return this._referee2.Entity;
			}
			set
			{
				referee previousValue = this._referee2.Entity;
				if (((previousValue != value) 
							|| (this._referee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._referee2.Entity = null;
						previousValue.matches2.Remove(this);
					}
					this._referee2.Entity = value;
					if ((value != null))
					{
						value.matches2.Add(this);
						this._id_referee = value.referee_id;
					}
					else
					{
						this._id_referee = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("referee2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="season_match", Storage="_season", ThisKey="season_id", OtherKey="season_id", IsForeignKey=true)]
		public season season
		{
			get
			{
				return this._season.Entity;
			}
			set
			{
				season previousValue = this._season.Entity;
				if (((previousValue != value) 
							|| (this._season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._season.Entity = null;
						previousValue.matches.Remove(this);
					}
					this._season.Entity = value;
					if ((value != null))
					{
						value.matches.Add(this);
						this._season_id = value.season_id;
					}
					else
					{
						this._season_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("season");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stadium_match", Storage="_Stadium", ThisKey="stadium_id", OtherKey="Stadium_id", IsForeignKey=true)]
		public Stadium Stadium
		{
			get
			{
				return this._Stadium.Entity;
			}
			set
			{
				Stadium previousValue = this._Stadium.Entity;
				if (((previousValue != value) 
							|| (this._Stadium.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stadium.Entity = null;
						previousValue.matches.Remove(this);
					}
					this._Stadium.Entity = value;
					if ((value != null))
					{
						value.matches.Add(this);
						this._stadium_id = value.Stadium_id;
					}
					else
					{
						this._stadium_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Stadium");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_match", Storage="_team", ThisKey="team1_id", OtherKey="team_id", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.matches.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.matches.Add(this);
						this._team1_id = value.team_id;
					}
					else
					{
						this._team1_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_match1", Storage="_team1", ThisKey="team2_id", OtherKey="team_id", IsForeignKey=true)]
		public team team1
		{
			get
			{
				return this._team1.Entity;
			}
			set
			{
				team previousValue = this._team1.Entity;
				if (((previousValue != value) 
							|| (this._team1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team1.Entity = null;
						previousValue.matches1.Remove(this);
					}
					this._team1.Entity = value;
					if ((value != null))
					{
						value.matches1.Add(this);
						this._team2_id = value.team_id;
					}
					else
					{
						this._team2_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("team1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_detail_goals(detail_goal entity)
		{
			this.SendPropertyChanging();
			entity.match = this;
		}
		
		private void detach_detail_goals(detail_goal entity)
		{
			this.SendPropertyChanging();
			entity.match = null;
		}
		
		private void attach_detail_warnings(detail_warning entity)
		{
			this.SendPropertyChanging();
			entity.match = this;
		}
		
		private void detach_detail_warnings(detail_warning entity)
		{
			this.SendPropertyChanging();
			entity.match = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.personnel")]
	public partial class personnel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _personnel_id;
		
		private string _personnel_name;
		
		private string _personnel_lastname;
		
		private System.Nullable<decimal> _city_id;
		
		private System.Nullable<int> _BirthYear;
		
		private string _email;
		
		private string _titel;
		
		private System.Nullable<System.DateTime> _date_start_working;
		
		private EntityRef<city> _city;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpersonnel_idChanging(decimal value);
    partial void Onpersonnel_idChanged();
    partial void Onpersonnel_nameChanging(string value);
    partial void Onpersonnel_nameChanged();
    partial void Onpersonnel_lastnameChanging(string value);
    partial void Onpersonnel_lastnameChanged();
    partial void Oncity_idChanging(System.Nullable<decimal> value);
    partial void Oncity_idChanged();
    partial void OnBirthYearChanging(System.Nullable<int> value);
    partial void OnBirthYearChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntitelChanging(string value);
    partial void OntitelChanged();
    partial void Ondate_start_workingChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_start_workingChanged();
    #endregion
		
		public personnel()
		{
			this._city = default(EntityRef<city>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personnel_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal personnel_id
		{
			get
			{
				return this._personnel_id;
			}
			set
			{
				if ((this._personnel_id != value))
				{
					this.Onpersonnel_idChanging(value);
					this.SendPropertyChanging();
					this._personnel_id = value;
					this.SendPropertyChanged("personnel_id");
					this.Onpersonnel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personnel_name", DbType="VarChar(40)")]
		public string personnel_name
		{
			get
			{
				return this._personnel_name;
			}
			set
			{
				if ((this._personnel_name != value))
				{
					this.Onpersonnel_nameChanging(value);
					this.SendPropertyChanging();
					this._personnel_name = value;
					this.SendPropertyChanged("personnel_name");
					this.Onpersonnel_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personnel_lastname", DbType="VarChar(40)")]
		public string personnel_lastname
		{
			get
			{
				return this._personnel_lastname;
			}
			set
			{
				if ((this._personnel_lastname != value))
				{
					this.Onpersonnel_lastnameChanging(value);
					this.SendPropertyChanging();
					this._personnel_lastname = value;
					this.SendPropertyChanged("personnel_lastname");
					this.Onpersonnel_lastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					if (this._city.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthYear", DbType="Int")]
		public System.Nullable<int> BirthYear
		{
			get
			{
				return this._BirthYear;
			}
			set
			{
				if ((this._BirthYear != value))
				{
					this.OnBirthYearChanging(value);
					this.SendPropertyChanging();
					this._BirthYear = value;
					this.SendPropertyChanged("BirthYear");
					this.OnBirthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titel", DbType="VarChar(20)")]
		public string titel
		{
			get
			{
				return this._titel;
			}
			set
			{
				if ((this._titel != value))
				{
					this.OntitelChanging(value);
					this.SendPropertyChanging();
					this._titel = value;
					this.SendPropertyChanged("titel");
					this.OntitelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_start_working", DbType="Date")]
		public System.Nullable<System.DateTime> date_start_working
		{
			get
			{
				return this._date_start_working;
			}
			set
			{
				if ((this._date_start_working != value))
				{
					this.Ondate_start_workingChanging(value);
					this.SendPropertyChanging();
					this._date_start_working = value;
					this.SendPropertyChanged("date_start_working");
					this.Ondate_start_workingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_personnel", Storage="_city", ThisKey="city_id", OtherKey="city_id", IsForeignKey=true)]
		public city city
		{
			get
			{
				return this._city.Entity;
			}
			set
			{
				city previousValue = this._city.Entity;
				if (((previousValue != value) 
							|| (this._city.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._city.Entity = null;
						previousValue.personnels.Remove(this);
					}
					this._city.Entity = value;
					if ((value != null))
					{
						value.personnels.Add(this);
						this._city_id = value.city_id;
					}
					else
					{
						this._city_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("city");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.player")]
	public partial class player : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _player_id;
		
		private string _player_name;
		
		private string _player_lastname;
		
		private System.Nullable<decimal> _city_id;
		
		private System.Nullable<int> _BirthYear;
		
		private string _email;
		
		private System.Nullable<System.DateTime> _date_start_football;
		
		private EntitySet<team_player> _team_players;
		
		private EntitySet<detail_goal> _detail_goals;
		
		private EntitySet<detail_warning> _detail_warnings;
		
		private EntityRef<city> _city;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplayer_idChanging(decimal value);
    partial void Onplayer_idChanged();
    partial void Onplayer_nameChanging(string value);
    partial void Onplayer_nameChanged();
    partial void Onplayer_lastnameChanging(string value);
    partial void Onplayer_lastnameChanged();
    partial void Oncity_idChanging(System.Nullable<decimal> value);
    partial void Oncity_idChanged();
    partial void OnBirthYearChanging(System.Nullable<int> value);
    partial void OnBirthYearChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Ondate_start_footballChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_start_footballChanged();
    #endregion
		
		public player()
		{
			this._team_players = new EntitySet<team_player>(new Action<team_player>(this.attach_team_players), new Action<team_player>(this.detach_team_players));
			this._detail_goals = new EntitySet<detail_goal>(new Action<detail_goal>(this.attach_detail_goals), new Action<detail_goal>(this.detach_detail_goals));
			this._detail_warnings = new EntitySet<detail_warning>(new Action<detail_warning>(this.attach_detail_warnings), new Action<detail_warning>(this.detach_detail_warnings));
			this._city = default(EntityRef<city>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal player_id
		{
			get
			{
				return this._player_id;
			}
			set
			{
				if ((this._player_id != value))
				{
					this.Onplayer_idChanging(value);
					this.SendPropertyChanging();
					this._player_id = value;
					this.SendPropertyChanged("player_id");
					this.Onplayer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_name", DbType="VarChar(40)")]
		public string player_name
		{
			get
			{
				return this._player_name;
			}
			set
			{
				if ((this._player_name != value))
				{
					this.Onplayer_nameChanging(value);
					this.SendPropertyChanging();
					this._player_name = value;
					this.SendPropertyChanged("player_name");
					this.Onplayer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_lastname", DbType="VarChar(40)")]
		public string player_lastname
		{
			get
			{
				return this._player_lastname;
			}
			set
			{
				if ((this._player_lastname != value))
				{
					this.Onplayer_lastnameChanging(value);
					this.SendPropertyChanging();
					this._player_lastname = value;
					this.SendPropertyChanged("player_lastname");
					this.Onplayer_lastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					if (this._city.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthYear", DbType="Int")]
		public System.Nullable<int> BirthYear
		{
			get
			{
				return this._BirthYear;
			}
			set
			{
				if ((this._BirthYear != value))
				{
					this.OnBirthYearChanging(value);
					this.SendPropertyChanging();
					this._BirthYear = value;
					this.SendPropertyChanged("BirthYear");
					this.OnBirthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_start_football", DbType="Date")]
		public System.Nullable<System.DateTime> date_start_football
		{
			get
			{
				return this._date_start_football;
			}
			set
			{
				if ((this._date_start_football != value))
				{
					this.Ondate_start_footballChanging(value);
					this.SendPropertyChanging();
					this._date_start_football = value;
					this.SendPropertyChanged("date_start_football");
					this.Ondate_start_footballChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_team_player", Storage="_team_players", ThisKey="player_id", OtherKey="id_player")]
		public EntitySet<team_player> team_players
		{
			get
			{
				return this._team_players;
			}
			set
			{
				this._team_players.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_detail_goal", Storage="_detail_goals", ThisKey="player_id", OtherKey="player_id")]
		public EntitySet<detail_goal> detail_goals
		{
			get
			{
				return this._detail_goals;
			}
			set
			{
				this._detail_goals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_detail_warning", Storage="_detail_warnings", ThisKey="player_id", OtherKey="player_id")]
		public EntitySet<detail_warning> detail_warnings
		{
			get
			{
				return this._detail_warnings;
			}
			set
			{
				this._detail_warnings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_player", Storage="_city", ThisKey="city_id", OtherKey="city_id", IsForeignKey=true)]
		public city city
		{
			get
			{
				return this._city.Entity;
			}
			set
			{
				city previousValue = this._city.Entity;
				if (((previousValue != value) 
							|| (this._city.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._city.Entity = null;
						previousValue.players.Remove(this);
					}
					this._city.Entity = value;
					if ((value != null))
					{
						value.players.Add(this);
						this._city_id = value.city_id;
					}
					else
					{
						this._city_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("city");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_team_players(team_player entity)
		{
			this.SendPropertyChanging();
			entity.player = this;
		}
		
		private void detach_team_players(team_player entity)
		{
			this.SendPropertyChanging();
			entity.player = null;
		}
		
		private void attach_detail_goals(detail_goal entity)
		{
			this.SendPropertyChanging();
			entity.player = this;
		}
		
		private void detach_detail_goals(detail_goal entity)
		{
			this.SendPropertyChanging();
			entity.player = null;
		}
		
		private void attach_detail_warnings(detail_warning entity)
		{
			this.SendPropertyChanging();
			entity.player = this;
		}
		
		private void detach_detail_warnings(detail_warning entity)
		{
			this.SendPropertyChanging();
			entity.player = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.referee")]
	public partial class referee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _referee_id;
		
		private System.Nullable<decimal> _city_id;
		
		private string _referee_name;
		
		private string _referee_lastname;
		
		private System.Nullable<int> _referee_level;
		
		private System.Nullable<int> _BirthYear;
		
		private System.Nullable<System.DateTime> _date_start_referee;
		
		private System.Nullable<int> _reffree_or_asstreferee;
		
		private string _email;
		
		private EntitySet<match> _matches;
		
		private EntitySet<match> _matches1;
		
		private EntitySet<match> _matches2;
		
		private EntityRef<city> _city;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreferee_idChanging(decimal value);
    partial void Onreferee_idChanged();
    partial void Oncity_idChanging(System.Nullable<decimal> value);
    partial void Oncity_idChanged();
    partial void Onreferee_nameChanging(string value);
    partial void Onreferee_nameChanged();
    partial void Onreferee_lastnameChanging(string value);
    partial void Onreferee_lastnameChanged();
    partial void Onreferee_levelChanging(System.Nullable<int> value);
    partial void Onreferee_levelChanged();
    partial void OnBirthYearChanging(System.Nullable<int> value);
    partial void OnBirthYearChanged();
    partial void Ondate_start_refereeChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_start_refereeChanged();
    partial void Onreffree_or_asstrefereeChanging(System.Nullable<int> value);
    partial void Onreffree_or_asstrefereeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public referee()
		{
			this._matches = new EntitySet<match>(new Action<match>(this.attach_matches), new Action<match>(this.detach_matches));
			this._matches1 = new EntitySet<match>(new Action<match>(this.attach_matches1), new Action<match>(this.detach_matches1));
			this._matches2 = new EntitySet<match>(new Action<match>(this.attach_matches2), new Action<match>(this.detach_matches2));
			this._city = default(EntityRef<city>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referee_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal referee_id
		{
			get
			{
				return this._referee_id;
			}
			set
			{
				if ((this._referee_id != value))
				{
					this.Onreferee_idChanging(value);
					this.SendPropertyChanging();
					this._referee_id = value;
					this.SendPropertyChanged("referee_id");
					this.Onreferee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					if (this._city.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referee_name", DbType="VarChar(40)")]
		public string referee_name
		{
			get
			{
				return this._referee_name;
			}
			set
			{
				if ((this._referee_name != value))
				{
					this.Onreferee_nameChanging(value);
					this.SendPropertyChanging();
					this._referee_name = value;
					this.SendPropertyChanged("referee_name");
					this.Onreferee_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referee_lastname", DbType="VarChar(40)")]
		public string referee_lastname
		{
			get
			{
				return this._referee_lastname;
			}
			set
			{
				if ((this._referee_lastname != value))
				{
					this.Onreferee_lastnameChanging(value);
					this.SendPropertyChanging();
					this._referee_lastname = value;
					this.SendPropertyChanged("referee_lastname");
					this.Onreferee_lastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referee_level", DbType="Int")]
		public System.Nullable<int> referee_level
		{
			get
			{
				return this._referee_level;
			}
			set
			{
				if ((this._referee_level != value))
				{
					this.Onreferee_levelChanging(value);
					this.SendPropertyChanging();
					this._referee_level = value;
					this.SendPropertyChanged("referee_level");
					this.Onreferee_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthYear", DbType="Int")]
		public System.Nullable<int> BirthYear
		{
			get
			{
				return this._BirthYear;
			}
			set
			{
				if ((this._BirthYear != value))
				{
					this.OnBirthYearChanging(value);
					this.SendPropertyChanging();
					this._BirthYear = value;
					this.SendPropertyChanged("BirthYear");
					this.OnBirthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_start_referee", DbType="Date")]
		public System.Nullable<System.DateTime> date_start_referee
		{
			get
			{
				return this._date_start_referee;
			}
			set
			{
				if ((this._date_start_referee != value))
				{
					this.Ondate_start_refereeChanging(value);
					this.SendPropertyChanging();
					this._date_start_referee = value;
					this.SendPropertyChanged("date_start_referee");
					this.Ondate_start_refereeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reffree_or_asstreferee", DbType="Int")]
		public System.Nullable<int> reffree_or_asstreferee
		{
			get
			{
				return this._reffree_or_asstreferee;
			}
			set
			{
				if ((this._reffree_or_asstreferee != value))
				{
					this.Onreffree_or_asstrefereeChanging(value);
					this.SendPropertyChanging();
					this._reffree_or_asstreferee = value;
					this.SendPropertyChanged("reffree_or_asstreferee");
					this.Onreffree_or_asstrefereeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="referee_match", Storage="_matches", ThisKey="referee_id", OtherKey="id_assist_referee1")]
		public EntitySet<match> matches
		{
			get
			{
				return this._matches;
			}
			set
			{
				this._matches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="referee_match1", Storage="_matches1", ThisKey="referee_id", OtherKey="id_assist_referee2")]
		public EntitySet<match> matches1
		{
			get
			{
				return this._matches1;
			}
			set
			{
				this._matches1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="referee_match2", Storage="_matches2", ThisKey="referee_id", OtherKey="id_referee")]
		public EntitySet<match> matches2
		{
			get
			{
				return this._matches2;
			}
			set
			{
				this._matches2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_referee", Storage="_city", ThisKey="city_id", OtherKey="city_id", IsForeignKey=true)]
		public city city
		{
			get
			{
				return this._city.Entity;
			}
			set
			{
				city previousValue = this._city.Entity;
				if (((previousValue != value) 
							|| (this._city.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._city.Entity = null;
						previousValue.referees.Remove(this);
					}
					this._city.Entity = value;
					if ((value != null))
					{
						value.referees.Add(this);
						this._city_id = value.city_id;
					}
					else
					{
						this._city_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("city");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_matches(match entity)
		{
			this.SendPropertyChanging();
			entity.referee = this;
		}
		
		private void detach_matches(match entity)
		{
			this.SendPropertyChanging();
			entity.referee = null;
		}
		
		private void attach_matches1(match entity)
		{
			this.SendPropertyChanging();
			entity.referee1 = this;
		}
		
		private void detach_matches1(match entity)
		{
			this.SendPropertyChanging();
			entity.referee1 = null;
		}
		
		private void attach_matches2(match entity)
		{
			this.SendPropertyChanging();
			entity.referee2 = this;
		}
		
		private void detach_matches2(match entity)
		{
			this.SendPropertyChanging();
			entity.referee2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.season")]
	public partial class season : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _date_start;
		
		private System.Nullable<System.DateTime> _date_end;
		
		private System.Nullable<char> _category;
		
		private decimal _season_id;
		
		private EntitySet<team_player> _team_players;
		
		private EntitySet<match> _matches;
		
		private EntitySet<team_coach> _team_coaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondate_startChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_startChanged();
    partial void Ondate_endChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_endChanged();
    partial void OncategoryChanging(System.Nullable<char> value);
    partial void OncategoryChanged();
    partial void Onseason_idChanging(decimal value);
    partial void Onseason_idChanged();
    #endregion
		
		public season()
		{
			this._team_players = new EntitySet<team_player>(new Action<team_player>(this.attach_team_players), new Action<team_player>(this.detach_team_players));
			this._matches = new EntitySet<match>(new Action<match>(this.attach_matches), new Action<match>(this.detach_matches));
			this._team_coaches = new EntitySet<team_coach>(new Action<team_coach>(this.attach_team_coaches), new Action<team_coach>(this.detach_team_coaches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_start", DbType="Date")]
		public System.Nullable<System.DateTime> date_start
		{
			get
			{
				return this._date_start;
			}
			set
			{
				if ((this._date_start != value))
				{
					this.Ondate_startChanging(value);
					this.SendPropertyChanging();
					this._date_start = value;
					this.SendPropertyChanged("date_start");
					this.Ondate_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_end", DbType="Date")]
		public System.Nullable<System.DateTime> date_end
		{
			get
			{
				return this._date_end;
			}
			set
			{
				if ((this._date_end != value))
				{
					this.Ondate_endChanging(value);
					this.SendPropertyChanging();
					this._date_end = value;
					this.SendPropertyChanged("date_end");
					this.Ondate_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="Char(1)")]
		public System.Nullable<char> category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_season_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal season_id
		{
			get
			{
				return this._season_id;
			}
			set
			{
				if ((this._season_id != value))
				{
					this.Onseason_idChanging(value);
					this.SendPropertyChanging();
					this._season_id = value;
					this.SendPropertyChanged("season_id");
					this.Onseason_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="season_team_player", Storage="_team_players", ThisKey="season_id", OtherKey="id_season")]
		public EntitySet<team_player> team_players
		{
			get
			{
				return this._team_players;
			}
			set
			{
				this._team_players.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="season_match", Storage="_matches", ThisKey="season_id", OtherKey="season_id")]
		public EntitySet<match> matches
		{
			get
			{
				return this._matches;
			}
			set
			{
				this._matches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="season_team_coach", Storage="_team_coaches", ThisKey="season_id", OtherKey="id_season")]
		public EntitySet<team_coach> team_coaches
		{
			get
			{
				return this._team_coaches;
			}
			set
			{
				this._team_coaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_team_players(team_player entity)
		{
			this.SendPropertyChanging();
			entity.season = this;
		}
		
		private void detach_team_players(team_player entity)
		{
			this.SendPropertyChanging();
			entity.season = null;
		}
		
		private void attach_matches(match entity)
		{
			this.SendPropertyChanging();
			entity.season = this;
		}
		
		private void detach_matches(match entity)
		{
			this.SendPropertyChanging();
			entity.season = null;
		}
		
		private void attach_team_coaches(team_coach entity)
		{
			this.SendPropertyChanging();
			entity.season = this;
		}
		
		private void detach_team_coaches(team_coach entity)
		{
			this.SendPropertyChanging();
			entity.season = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stadium")]
	public partial class Stadium : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Stadium_id;
		
		private System.Nullable<decimal> _city_id;
		
		private string _Stadium_name;
		
		private System.Nullable<decimal> _capacity;
		
		private EntitySet<match> _matches;
		
		private EntityRef<city> _city;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStadium_idChanging(decimal value);
    partial void OnStadium_idChanged();
    partial void Oncity_idChanging(System.Nullable<decimal> value);
    partial void Oncity_idChanged();
    partial void OnStadium_nameChanging(string value);
    partial void OnStadium_nameChanged();
    partial void OncapacityChanging(System.Nullable<decimal> value);
    partial void OncapacityChanged();
    #endregion
		
		public Stadium()
		{
			this._matches = new EntitySet<match>(new Action<match>(this.attach_matches), new Action<match>(this.detach_matches));
			this._city = default(EntityRef<city>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stadium_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Stadium_id
		{
			get
			{
				return this._Stadium_id;
			}
			set
			{
				if ((this._Stadium_id != value))
				{
					this.OnStadium_idChanging(value);
					this.SendPropertyChanging();
					this._Stadium_id = value;
					this.SendPropertyChanged("Stadium_id");
					this.OnStadium_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					if (this._city.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stadium_name", DbType="VarChar(40)")]
		public string Stadium_name
		{
			get
			{
				return this._Stadium_name;
			}
			set
			{
				if ((this._Stadium_name != value))
				{
					this.OnStadium_nameChanging(value);
					this.SendPropertyChanging();
					this._Stadium_name = value;
					this.SendPropertyChanged("Stadium_name");
					this.OnStadium_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacity", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> capacity
		{
			get
			{
				return this._capacity;
			}
			set
			{
				if ((this._capacity != value))
				{
					this.OncapacityChanging(value);
					this.SendPropertyChanging();
					this._capacity = value;
					this.SendPropertyChanged("capacity");
					this.OncapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stadium_match", Storage="_matches", ThisKey="Stadium_id", OtherKey="stadium_id")]
		public EntitySet<match> matches
		{
			get
			{
				return this._matches;
			}
			set
			{
				this._matches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_Stadium", Storage="_city", ThisKey="city_id", OtherKey="city_id", IsForeignKey=true)]
		public city city
		{
			get
			{
				return this._city.Entity;
			}
			set
			{
				city previousValue = this._city.Entity;
				if (((previousValue != value) 
							|| (this._city.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._city.Entity = null;
						previousValue.Stadiums.Remove(this);
					}
					this._city.Entity = value;
					if ((value != null))
					{
						value.Stadiums.Add(this);
						this._city_id = value.city_id;
					}
					else
					{
						this._city_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("city");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_matches(match entity)
		{
			this.SendPropertyChanging();
			entity.Stadium = this;
		}
		
		private void detach_matches(match entity)
		{
			this.SendPropertyChanging();
			entity.Stadium = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.team")]
	public partial class team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _team_id;
		
		private System.Nullable<decimal> _city_id;
		
		private string _team_name;
		
		private EntitySet<team_player> _team_players;
		
		private EntitySet<detail_match> _detail_matches;
		
		private EntitySet<detail_match> _detail_matches1;
		
		private EntitySet<match> _matches;
		
		private EntitySet<match> _matches1;
		
		private EntitySet<team_coach> _team_coaches;
		
		private EntityRef<city> _city;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onteam_idChanging(decimal value);
    partial void Onteam_idChanged();
    partial void Oncity_idChanging(System.Nullable<decimal> value);
    partial void Oncity_idChanged();
    partial void Onteam_nameChanging(string value);
    partial void Onteam_nameChanged();
    #endregion
		
		public team()
		{
			this._team_players = new EntitySet<team_player>(new Action<team_player>(this.attach_team_players), new Action<team_player>(this.detach_team_players));
			this._detail_matches = new EntitySet<detail_match>(new Action<detail_match>(this.attach_detail_matches), new Action<detail_match>(this.detach_detail_matches));
			this._detail_matches1 = new EntitySet<detail_match>(new Action<detail_match>(this.attach_detail_matches1), new Action<detail_match>(this.detach_detail_matches1));
			this._matches = new EntitySet<match>(new Action<match>(this.attach_matches), new Action<match>(this.detach_matches));
			this._matches1 = new EntitySet<match>(new Action<match>(this.attach_matches1), new Action<match>(this.detach_matches1));
			this._team_coaches = new EntitySet<team_coach>(new Action<team_coach>(this.attach_team_coaches), new Action<team_coach>(this.detach_team_coaches));
			this._city = default(EntityRef<city>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal team_id
		{
			get
			{
				return this._team_id;
			}
			set
			{
				if ((this._team_id != value))
				{
					this.Onteam_idChanging(value);
					this.SendPropertyChanging();
					this._team_id = value;
					this.SendPropertyChanged("team_id");
					this.Onteam_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					if (this._city.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_name", DbType="VarChar(40)")]
		public string team_name
		{
			get
			{
				return this._team_name;
			}
			set
			{
				if ((this._team_name != value))
				{
					this.Onteam_nameChanging(value);
					this.SendPropertyChanging();
					this._team_name = value;
					this.SendPropertyChanged("team_name");
					this.Onteam_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_team_player", Storage="_team_players", ThisKey="team_id", OtherKey="id_team")]
		public EntitySet<team_player> team_players
		{
			get
			{
				return this._team_players;
			}
			set
			{
				this._team_players.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_detail_match", Storage="_detail_matches", ThisKey="team_id", OtherKey="team_id_lost")]
		public EntitySet<detail_match> detail_matches
		{
			get
			{
				return this._detail_matches;
			}
			set
			{
				this._detail_matches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_detail_match1", Storage="_detail_matches1", ThisKey="team_id", OtherKey="team_id_won")]
		public EntitySet<detail_match> detail_matches1
		{
			get
			{
				return this._detail_matches1;
			}
			set
			{
				this._detail_matches1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_match", Storage="_matches", ThisKey="team_id", OtherKey="team1_id")]
		public EntitySet<match> matches
		{
			get
			{
				return this._matches;
			}
			set
			{
				this._matches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_match1", Storage="_matches1", ThisKey="team_id", OtherKey="team2_id")]
		public EntitySet<match> matches1
		{
			get
			{
				return this._matches1;
			}
			set
			{
				this._matches1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_team_coach", Storage="_team_coaches", ThisKey="team_id", OtherKey="id_team")]
		public EntitySet<team_coach> team_coaches
		{
			get
			{
				return this._team_coaches;
			}
			set
			{
				this._team_coaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_team", Storage="_city", ThisKey="city_id", OtherKey="city_id", IsForeignKey=true)]
		public city city
		{
			get
			{
				return this._city.Entity;
			}
			set
			{
				city previousValue = this._city.Entity;
				if (((previousValue != value) 
							|| (this._city.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._city.Entity = null;
						previousValue.teams.Remove(this);
					}
					this._city.Entity = value;
					if ((value != null))
					{
						value.teams.Add(this);
						this._city_id = value.city_id;
					}
					else
					{
						this._city_id = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("city");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_team_players(team_player entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_team_players(team_player entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
		
		private void attach_detail_matches(detail_match entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_detail_matches(detail_match entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
		
		private void attach_detail_matches1(detail_match entity)
		{
			this.SendPropertyChanging();
			entity.team1 = this;
		}
		
		private void detach_detail_matches1(detail_match entity)
		{
			this.SendPropertyChanging();
			entity.team1 = null;
		}
		
		private void attach_matches(match entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_matches(match entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
		
		private void attach_matches1(match entity)
		{
			this.SendPropertyChanging();
			entity.team1 = this;
		}
		
		private void detach_matches1(match entity)
		{
			this.SendPropertyChanging();
			entity.team1 = null;
		}
		
		private void attach_team_coaches(team_coach entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_team_coaches(team_coach entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.team_coach")]
	public partial class team_coach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _id_team;
		
		private decimal _id_coach;
		
		private decimal _id_season;
		
		private System.Nullable<decimal> _amount_;
		
		private EntityRef<coach> _coach;
		
		private EntityRef<season> _season;
		
		private EntityRef<team> _team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_teamChanging(decimal value);
    partial void Onid_teamChanged();
    partial void Onid_coachChanging(decimal value);
    partial void Onid_coachChanged();
    partial void Onid_seasonChanging(decimal value);
    partial void Onid_seasonChanged();
    partial void Onamount_Changing(System.Nullable<decimal> value);
    partial void Onamount_Changed();
    #endregion
		
		public team_coach()
		{
			this._coach = default(EntityRef<coach>);
			this._season = default(EntityRef<season>);
			this._team = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_team", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal id_team
		{
			get
			{
				return this._id_team;
			}
			set
			{
				if ((this._id_team != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_teamChanging(value);
					this.SendPropertyChanging();
					this._id_team = value;
					this.SendPropertyChanged("id_team");
					this.Onid_teamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_coach", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal id_coach
		{
			get
			{
				return this._id_coach;
			}
			set
			{
				if ((this._id_coach != value))
				{
					if (this._coach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_coachChanging(value);
					this.SendPropertyChanging();
					this._id_coach = value;
					this.SendPropertyChanged("id_coach");
					this.Onid_coachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_season", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal id_season
		{
			get
			{
				return this._id_season;
			}
			set
			{
				if ((this._id_season != value))
				{
					if (this._season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_seasonChanging(value);
					this.SendPropertyChanging();
					this._id_season = value;
					this.SendPropertyChanged("id_season");
					this.Onid_seasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount_", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> amount_
		{
			get
			{
				return this._amount_;
			}
			set
			{
				if ((this._amount_ != value))
				{
					this.Onamount_Changing(value);
					this.SendPropertyChanging();
					this._amount_ = value;
					this.SendPropertyChanged("amount_");
					this.Onamount_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="coach_team_coach", Storage="_coach", ThisKey="id_coach", OtherKey="coach_id", IsForeignKey=true)]
		public coach coach
		{
			get
			{
				return this._coach.Entity;
			}
			set
			{
				coach previousValue = this._coach.Entity;
				if (((previousValue != value) 
							|| (this._coach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._coach.Entity = null;
						previousValue.team_coaches.Remove(this);
					}
					this._coach.Entity = value;
					if ((value != null))
					{
						value.team_coaches.Add(this);
						this._id_coach = value.coach_id;
					}
					else
					{
						this._id_coach = default(decimal);
					}
					this.SendPropertyChanged("coach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="season_team_coach", Storage="_season", ThisKey="id_season", OtherKey="season_id", IsForeignKey=true)]
		public season season
		{
			get
			{
				return this._season.Entity;
			}
			set
			{
				season previousValue = this._season.Entity;
				if (((previousValue != value) 
							|| (this._season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._season.Entity = null;
						previousValue.team_coaches.Remove(this);
					}
					this._season.Entity = value;
					if ((value != null))
					{
						value.team_coaches.Add(this);
						this._id_season = value.season_id;
					}
					else
					{
						this._id_season = default(decimal);
					}
					this.SendPropertyChanged("season");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_team_coach", Storage="_team", ThisKey="id_team", OtherKey="team_id", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.team_coaches.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.team_coaches.Add(this);
						this._id_team = value.team_id;
					}
					else
					{
						this._id_team = default(decimal);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
